<?php
/**
 *  All the folders, and such are set in this class and init() actualy takes
 *  care of including all the other classes that blocks need to work properly.
 */
class Index {

    public static $rootFolder;
    public static $includes;
    public static $blocks;
    public static $phpIncludes;
    public static $images;
    public static $imagesRel; /* relative path... from index.php perspective */
    public static $rootURL;
    public static $imagesURL;

    private static $blocksList = array();

    public static function init() {
        self::$rootFolder = eregi_replace("index.php$", "", $_SERVER['SCRIPT_FILENAME']);
        self::$includes = self::$rootFolder . "includes/";
        self::$blocks = self::$includes . "blocks/";
        self::$phpIncludes = self::$includes . "PHP/";
        self::$images = self::$rootFolder ."images/";

        self::$imagesRel = "images/";

        self::$rootURL = self::getURL();
        self::$imagesURL = self::$rootURL . "images/";
        
        include_once self::$blocks . 'CSS.class.php';
    }

    private static function getURL() {
        $pageURL = 'http';
        if (isset($_SERVER["HTTPS"]) && $_SERVER["HTTPS"] == "on") {
            $pageURL .= "s";
        }
        $pageURL .= "://";
        if ($_SERVER["SERVER_PORT"] != "80") {
            $pageURL .= $_SERVER["SERVER_NAME"].":".$_SERVER["SERVER_PORT"].$_SERVER["REQUEST_URI"];
        } else {
            $pageURL .= $_SERVER["SERVER_NAME"].$_SERVER["REQUEST_URI"];
        }
        return eregi_replace("index.php$", "", $pageURL);
    }

    public static function setBlocks($blocksList){
        if(is_array($blocksList)) self::$blocksList = array_merge((array)$blocksList, self::$blocksList);
    }

    public static function includeCSS($file = null){
        echo chr(10)."<style type=\"text/css\">".chr(10);
		if($file && eregi(".css$", $file)) {
			self::includeFile($file);
		}else {        
        	foreach( self::$blocksList as $block){
            	if(file_exists(self::$blocks.$block.".css")) include(self::$blocks.$block.".css");
        	}
   		}
        echo chr(10)."</style>".chr(10);
    }

    public static function includeJS(){
        echo chr(10)."<script type=\"text/javascript\">".chr(10);
        foreach( self::$blocksList as $block){
            if(file_exists(self::$blocks.$block.".js")) include(self::$blocks.$block.".js");
        }
        echo chr(10)."</script>".chr(10);
    }

    public static function includeHTML($block){
        if(file_exists(self::$blocks.$block.".php")) include(self::$blocks.$block.".php");
    }

    public static function includeFile($file, $once = true) {
        if(!$file) return false;
        if($once) include_once (self::$includes.$file);
        else include (self::$includes.$file);
    }

    public static function echoVars(){
        echo "<br /><br /> ROOT FOLDER: ". self::$rootFolder;
        echo "<br />INCLUDES: ".self::$includes;
        echo "<br />BLOCKS: ".self::$blocks;
        echo "<br />PHP: ".self::$phpIncludes;
        echo "<br />IMAGES: ".self::$images;
        echo "<br />IMAGES RELATIVE:".self::$imagesRel;

        echo "<br />ROOT URL: ".self::$rootURL;
        echo "<br />IMAGES URL:".self::$imagesURL;
        echo "<br /><br />";
    }

}Index::init();




?>
